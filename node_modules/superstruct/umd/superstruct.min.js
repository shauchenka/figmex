!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(t.Superstruct={})}(this,function(t){"use strict";function r(t){return t.constructor?t.constructor.name:null}function e(t){return!(!t||!t[m])}function n(t,r){return"function"==typeof t?t(r):t}function a(t,r,n){if(e(t))return t[w];if(t instanceof j)return t;switch(v(t)){case"array":return t.length>1?d(t,r,n):s(t,r,n);case"function":return i(t,r,n);case"object":return u(t,r,n);case"string":{let e,a=!0;if(t.endsWith("?")&&(a=!1,t=t.slice(0,-1)),t.includes("|")){e=p(t.split(/\s*\|\s*/g),r,n)}else if(t.includes("&")){e=l(t.split(/\s*&\s*/g),r,n)}else e=f(t,r,n);return a||(e=c(e,void 0,n)),e}}throw new Error(`A schema definition must be an object, array, string or function, but you passed: ${t}`)}function o(t,r,e){if("array"!==v(t))throw new Error(`Enum structs must be defined as an array, but you passed: ${t}`);const a=t.map(t=>{try{return JSON.stringify(t)}catch(r){return String(t)}}).join(" | ");return new j("enum",a,(e=n(r))=>t.includes(e)?[void 0,e]:[{data:e,path:[],value:e,type:a}])}function i(t,r,e){if("function"!==v(t))throw new Error(`Function structs must be defined as a function, but you passed: ${t}`);return new j("function","<function>",(e=n(r),a)=>{const o=t(e,a);let i,s={path:[],reason:null};switch(v(o)){case"boolean":i=o;break;case"string":i=!1,s.reason=o;break;case"object":i=!1,s=g({},s,o);break;default:throw new Error(`Validator functions must return a boolean, an error reason string or an error reason object, but you passed: ${t}`)}return i?[void 0,e]:[g({type:"<function>",value:e,data:e},s)]})}function s(t,r,e){if("array"!==v(t)||1!==t.length)throw new Error(`List structs must be defined as an array with a single element, but you passed: ${t}`);const o=f("array",void 0,e),i=a(t[0],void 0,e),s=`[${i.type}]`;return new j("list",s,(t=n(r))=>{const[e,a]=o.validate(t);if(e)return e.type=s,[e];t=a;const u=[],c=[];for(let r=0;r<t.length;r++){const e=t[r],[n,a]=i.validate(e);n?(n.path=[r].concat(n.path),n.data=t,u.push(n)):c[r]=a}if(u.length){const t=u[0];return t.errors=u,[t]}return[void 0,c]})}function u(t,r,e){if("object"!==v(t))throw new Error(`Object structs must be defined as an object, but you passed: ${t}`);const o=f("object",void 0,e),i=[],s={};for(const r in t){i.push(r);const n=a(t[r],void 0,e);s[r]=n}const u=`{${i.join()}}`;return new j("object",u,(t=n(r))=>{const[e]=o.validate(t);if(e)return e.type=u,[e];const a=[],i={},c=Object.keys(t),f=Object.keys(s);if(new Set(c.concat(f)).forEach(e=>{let o=t[e];const u=s[e];if(void 0===o&&(o=n(r&&r[e],t)),!u){const r={data:t,path:[e],value:o};return void a.push(r)}const[c,f]=u.validate(o,t);if(c)return c.path=[e].concat(c.path),c.data=t,void a.push(c);(e in t||void 0!==f)&&(i[e]=f)}),a.length){const t=a[0];return t.errors=a,[t]}return[void 0,i]})}function c(t,r,e){return p([t,"undefined"],r,e)}function f(t,r,e){if("string"!==v(t))throw new Error(`Scalar structs must be defined as a string, but you passed: ${t}`);const{types:n}=e,a=n[t];if("function"!==v(a))throw new Error(`No struct validator function found for type "${t}".`);const o=i(a,r),s=t;return new j("scalar",s,t=>{const[r,e]=o.validate(t);return r?(r.type=s,[r]):[void 0,e]})}function d(t,r,e){if("array"!==v(t))throw new Error(`Tuple structs must be defined as an array, but you passed: ${t}`);const o=t.map(t=>a(t,void 0,e)),i=f("array",void 0,e),s=`[${o.map(t=>t.type).join()}]`;return new j("tuple",s,(t=n(r))=>{const[e]=i.validate(t);if(e)return e.type=s,[e];const a=[],u=[],c=Math.max(t.length,o.length);for(let r=0;r<c;r++){const e=o[r],n=t[r];if(!e){const e={data:t,path:[r],value:n};u.push(e);continue}const[i,s]=e.validate(n);i?(i.path=[r].concat(i.path),i.data=t,u.push(i)):a[r]=s}if(u.length){const t=u[0];return t.errors=u,[t]}return[void 0,a]})}function p(t,r,e){if("array"!==v(t))throw new Error(`Union structs must be defined as an array, but you passed: ${t}`);const o=t.map(t=>a(t,void 0,e)),i=o.map(t=>t.type).join(" | ");return new j("union",i,(t=n(r))=>{const e=[];for(const r of o){const[n,a]=r.validate(t);if(!n)return[void 0,a];e.push(n)}return e[0].type=i,e})}function l(t,r,e){if("array"!==v(t))throw new Error(`Intersection structs must be defined as an array, but you passed: ${t}`);const o=t.map(t=>a(t,void 0,e)),i=o.map(t=>t.type).join(" & ");return new j("intersection",i,(t=n(r))=>{let e=t;for(const t of o){const[r,n]=t.validate(e);if(r)return r.type=i,[r];e=n}return[void 0,e]})}function y(t={}){function r(t,r,a={}){function o(t){if(this instanceof o)throw new Error("The `Struct` creation function should not be used with the `new` keyword.");return o.assert(t)}e(t)&&(t=t.schema);const i=E.any(t,r,g({},a,{types:n}));return Object.defineProperty(o,m,{value:!0}),Object.defineProperty(o,w,{value:i}),o.kind=i.name,o.type=i.type,o.schema=t,o.defaults=r,o.options=a,o.assert=(t=>{const[r,e]=i.validate(t);if(r)throw new h(r);return e}),o.test=(t=>{const[r]=i.validate(t);return!r}),o.validate=(t=>{const[r,e]=i.validate(t);return r?[new h(r)]:[void 0,e]}),o}const n=g({},$,t.types||{});return Object.keys(E).forEach(t=>{const e=E[t];r[t]=((t,a,o)=>{return r(e(t,a,g({},o,{types:n})),a,o)})}),r}class h extends TypeError{static format(t){const{type:r,path:e,value:n}=t;return`Expected a value of type \`${r}\`${e.length?` for \`${e.join(".")}\``:""} but received \`${JSON.stringify(n)}\`.`}constructor(t){super(h.format(t));const{data:r,path:e,value:n,reason:a,type:o,errors:i=[]}=t;this.data=r,this.path=e,this.value=n,this.reason=a,this.type=o,this.errors=i,i.length||i.push(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack}}var b=Object.prototype.toString,v=function(t){if(void 0===t)return"undefined";if(null===t)return"null";var e=typeof t;if("boolean"===e)return"boolean";if("string"===e)return"string";if("number"===e)return"number";if("symbol"===e)return"symbol";if("function"===e)return function(t,e){return"GeneratorFunction"===r(t)}(t)?"generatorfunction":"function";if(function(t){return Array.isArray?Array.isArray(t):t instanceof Array}(t))return"array";if(function(t){return!(!t.constructor||"function"!=typeof t.constructor.isBuffer)&&t.constructor.isBuffer(t)}(t))return"buffer";if(function(t){try{if("number"==typeof t.length&&"function"==typeof t.callee)return!0}catch(t){if(-1!==t.message.indexOf("callee"))return!0}return!1}(t))return"arguments";if(function(t){return t instanceof Date||"function"==typeof t.toDateString&&"function"==typeof t.getDate&&"function"==typeof t.setDate}(t))return"date";if(function(t){return t instanceof Error||"string"==typeof t.message&&t.constructor&&"number"==typeof t.constructor.stackTraceLimit}(t))return"error";if(function(t){return t instanceof RegExp||"string"==typeof t.flags&&"boolean"==typeof t.ignoreCase&&"boolean"==typeof t.multiline&&"boolean"==typeof t.global}(t))return"regexp";switch(r(t)){case"Symbol":return"symbol";case"Promise":return"promise";case"WeakMap":return"weakmap";case"WeakSet":return"weakset";case"Map":return"map";case"Set":return"set";case"Int8Array":return"int8array";case"Uint8Array":return"uint8array";case"Uint8ClampedArray":return"uint8clampedarray";case"Int16Array":return"int16array";case"Uint16Array":return"uint16array";case"Int32Array":return"int32array";case"Uint32Array":return"uint32array";case"Float32Array":return"float32array";case"Float64Array":return"float64array"}if(function(t){return"function"==typeof t.throw&&"function"==typeof t.return&&"function"==typeof t.next}(t))return"generator";switch(e=b.call(t)){case"[object Object]":return"object";case"[object Map Iterator]":return"mapiterator";case"[object Set Iterator]":return"setiterator";case"[object String Iterator]":return"stringiterator";case"[object Array Iterator]":return"arrayiterator"}return e.slice(8,-1).toLowerCase().replace(/\s/g,"")};const m="@@__STRUCT__@@",w="@@__KIND__@@";var g=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t};class j{constructor(t,r,e){this.name=t,this.type=r,this.validate=e}}const E={any:a,dict:function(t,r,e){if("array"!==v(t)||2!==t.length)throw new Error(`Dict structs must be defined as an array with two elements, but you passed: ${t}`);const o=f("object",void 0,e),i=a(t[0],void 0,e),s=a(t[1],void 0,e),u=`dict<${i.type},${s.type}>`;return new j("dict",u,t=>{const e=n(r);t=e?g({},e,t):t;const[a]=o.validate(t);if(a)return a.type=u,[a];const c={},f=[];for(let r in t){const e=t[r],[n,a]=i.validate(r);if(n){n.path=[r].concat(n.path),n.data=t,f.push(n);continue}r=a;const[o,u]=s.validate(e);o?(o.path=[r].concat(o.path),o.data=t,f.push(o)):c[r]=u}if(f.length){const t=f[0];return t.errors=f,[t]}return[void 0,c]})},enum:o,enums:function(t,r,e){return s([o(t,void 0)],r,e)},function:i,instance:function(t,r,e){const a=`instance<${t.name}>`;return new j("instance",a,(e=n(r))=>e instanceof t?[void 0,e]:[{data:e,path:[],value:e,type:a}])},interface:function(t,r,e){if("object"!==v(t))throw new Error(`Interface structs must be defined as an object, but you passed: ${t}`);const o=[],i={};for(const r in t){o.push(r);const n=a(t[r],void 0,e);i[r]=n}const s=`{${o.join()}}`;return new j("interface",s,t=>{const e=n(r),a=[],o=t=e?g({},e,t):t;for(const e in i){let s=t[e];const u=i[e];void 0===s&&(s=n(r&&r[e],t));const[c,f]=u.validate(s,t);c?(c.path=[e].concat(c.path),c.data=t,a.push(c)):(e in t||void 0!==f)&&(o[e]=f)}if(a.length){const t=a[0];return t.errors=a,[t]}return[void 0,o]})},lazy:function(t,r,e){if("function"!==v(t))throw new Error(`Lazy structs must be defined as an function that returns a schema, but you passed: ${t}`);let n,a;return n=new j("lazy","lazy...",r=>(a=t(),n.name=a.kind,n.type=a.type,n.validate=a.validate,n.validate(r)))},list:s,literal:function(t,r,e){const a=`literal: ${JSON.stringify(t)}`;return new j("literal",a,(e=n(r))=>e===t?[void 0,e]:[{data:e,path:[],value:e,type:a}])},object:u,optional:c,partial:function(t,r,e){if("object"!==v(t))throw new Error(`Partial structs must be defined as an object, but you passed: ${t}`);const o=f("object",void 0,e),i=[],s={};for(const r in t){i.push(r);const n=a(t[r],void 0,e);s[r]=n}const u=`{${i.join()},...}`;return new j("partial",u,(t=n(r))=>{const[e]=o.validate(t);if(e)return e.type=u,[e];const a=[],i={};for(const e in s){let o=t[e];const u=s[e];void 0===o&&(o=n(r&&r[e],t));const[c,f]=u.validate(o,t);c?(c.path=[e].concat(c.path),c.data=t,a.push(c)):(e in t||void 0!==f)&&(i[e]=f)}if(a.length){const t=a[0];return t.errors=a,[t]}return[void 0,i]})},scalar:f,tuple:d,union:p,intersection:l},$={any:t=>void 0!==t};["arguments","array","boolean","buffer","date","error","float32array","float64array","function","generatorfunction","int16array","int32array","int8array","map","null","number","object","promise","regexp","set","string","symbol","uint16array","uint32array","uint8array","uint8clampedarray","undefined","weakmap","weakset"].forEach(t=>{$[t]=(r=>v(r)===t)});const k=y();t.struct=k,t.superstruct=y,t.isStruct=e,t.StructError=h,Object.defineProperty(t,"__esModule",{value:!0})});
